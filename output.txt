312START

312FILE Programs Folder/program0
312BEGIN <statement part>
312TOKEN begin on line 1
312BEGIN <statement list>
312BEGIN <statement>
312BEGIN <procedure statement>
312TOKEN call on line 2
312TOKEN IDENTIFIER 'get' on line 2
312TOKEN ( on line 2
312BEGIN <argument list>
312TOKEN IDENTIFIER 'x1' on line 2
312END <argument list>
312TOKEN ) on line 2
312END <procedure statement>
312END <statement>
312TOKEN ; on line 2
312BEGIN <statement list>
312BEGIN <statement>
312BEGIN <assignment statement>
312TOKEN IDENTIFIER 'x2' on line 3
312TOKEN := on line 3
312BEGIN expression
312BEGIN <term>
312BEGIN <factor>
312TOKEN NUMBER '1' on line 3
312END <factor>
312END <term>
312END expression
312END <assignment statement>
312END <statement>
312TOKEN ; on line 3
312BEGIN <statement list>
312BEGIN <statement>
312BEGIN <while statement>
312TOKEN while on line 4
312BEGIN <condition>
312TOKEN IDENTIFIER 'x1' on line 4
312BEGIN <conditional operator>
312TOKEN /= on line 4
312END <conditional operator>
312TOKEN NUMBER '0' on line 4
312END <condition>
312TOKEN loop on line 4
312BEGIN <statement list>
312BEGIN <statement>
312BEGIN <assignment statement>
312TOKEN IDENTIFIER 'x2' on line 5
312TOKEN := on line 5
312BEGIN expression
312BEGIN <term>
312BEGIN <factor>
312TOKEN IDENTIFIER 'x2' on line 5
312END <factor>
312TOKEN * on line 5
312BEGIN <term>
312BEGIN <factor>
312TOKEN IDENTIFIER 'x1' on line 5
312END <factor>
312END <term>
312END <term>
312END expression
312END <assignment statement>
312END <statement>
312TOKEN ; on line 5
312BEGIN <statement list>
312BEGIN <statement>
312BEGIN <assignment statement>
312TOKEN IDENTIFIER 'x1' on line 6
312TOKEN := on line 6
312BEGIN expression
312BEGIN <term>
312BEGIN <factor>
312TOKEN IDENTIFIER 'x1' on line 6
312END <factor>
312END <term>
312TOKEN - on line 6
312BEGIN <term>
312BEGIN <factor>
312TOKEN NUMBER '1' on line 6
312END <factor>
312END <term>
312END expression
312END <assignment statement>
312END <statement>
312END <statement list>
312END <statement list>
312TOKEN end on line 7
312TOKEN loop on line 7
312END <while statement>
312END <statement>
312TOKEN ; on line 7
312BEGIN <statement list>
312BEGIN <statement>
312BEGIN <assignment statement>
312TOKEN IDENTIFIER 'text' on line 8
312TOKEN := on line 8
312TOKEN STRING 'the result is ' on line 8
312END <assignment statement>
312END <statement>
312TOKEN ; on line 8
312BEGIN <statement list>
312BEGIN <statement>
312BEGIN <procedure statement>
312TOKEN call on line 9
312TOKEN IDENTIFIER 'put' on line 9
312TOKEN ( on line 9
312BEGIN <argument list>
312TOKEN IDENTIFIER 'text' on line 9
312END <argument list>
312TOKEN ) on line 9
312END <procedure statement>
312END <statement>
312TOKEN ; on line 9
312BEGIN <statement list>
312BEGIN <statement>
312BEGIN <procedure statement>
312TOKEN call on line 10
312TOKEN IDENTIFIER 'put' on line 10
312TOKEN ( on line 10
312BEGIN <argument list>
312TOKEN IDENTIFIER 'x1' on line 10
312END <argument list>
312TOKEN ) on line 10
312END <procedure statement>
312END <statement>
312END <statement list>
312END <statement list>
312END <statement list>
312END <statement list>
312END <statement list>
312END <statement list>
312TOKEN end on line 11
312END <statement part>
312TOKEN EOF on line 13
312SUCCESS

312FILE Programs Folder/program1
312BEGIN <statement part>
312TOKEN begin on line 1
312BEGIN <statement list>
312BEGIN <statement>
312BEGIN <procedure statement>
312TOKEN call on line 2
312TOKEN IDENTIFIER 'get' on line 2
312TOKEN ( on line 2
312BEGIN <argument list>
312TOKEN IDENTIFIER 'x1' on line 2
312END <argument list>
312TOKEN ) on line 2
312END <procedure statement>
312END <statement>
312TOKEN ; on line 2
312BEGIN <statement list>
312BEGIN <statement>
312BEGIN <assignment statement>
312TOKEN IDENTIFIER 'x2' on line 3
312TOKEN := on line 3
312BEGIN expression
312BEGIN <term>
312BEGIN <factor>
312TOKEN NUMBER '1' on line 3
312END <factor>
312END <term>
312END expression
312END <assignment statement>
312END <statement>
312TOKEN ; on line 3
312BEGIN <statement list>
312BEGIN <statement>
312BEGIN <while statement>
312TOKEN while on line 4
312BEGIN <condition>
312TOKEN IDENTIFIER 'x1' on line 4
312BEGIN <conditional operator>
312TOKEN /= on line 4
312END <conditional operator>
312TOKEN NUMBER '0' on line 4
312END <condition>
312TOKEN loop on line 4
312BEGIN <statement list>
312BEGIN <statement>
312BEGIN <assignment statement>
312TOKEN IDENTIFIER 'x2' on line 5
312TOKEN := on line 5
312BEGIN expression
312BEGIN <term>
312BEGIN <factor>
312TOKEN IDENTIFIER 'x2' on line 5
312END <factor>
312TOKEN * on line 5
312BEGIN <term>
312BEGIN <factor>
312TOKEN IDENTIFIER 'x1' on line 5
312END <factor>
312END <term>
312END <term>
312END expression
312END <assignment statement>
312END <statement>
312TOKEN ; on line 5
312BEGIN <statement list>
312BEGIN <statement>
312BEGIN <assignment statement>
312TOKEN IDENTIFIER 'x1' on line 6
312TOKEN := on line 6
312BEGIN expression
312BEGIN <term>
312BEGIN <factor>
312TOKEN IDENTIFIER 'x1' on line 6
312END <factor>
312END <term>
312TOKEN - on line 6
312BEGIN <term>
312BEGIN <factor>
312TOKEN NUMBER '1' on line 6
312END <factor>
312END <term>
312END expression
312END <assignment statement>
312END <statement>
312END <statement list>
312END <statement list>
312TOKEN end on line 7
312TOKEN loop on line 7
312END <while statement>
312END <statement>
312TOKEN ; on line 7
312BEGIN <statement list>
312BEGIN <statement>
312BEGIN <assignment statement>
312TOKEN IDENTIFIER 'text' on line 8
312TOKEN := on line 8
312TOKEN STRING 'the result is ' on line 8
312END <assignment statement>
312END <statement>
312TOKEN ; on line 8
312BEGIN <statement list>
312BEGIN <statement>
312BEGIN <procedure statement>
312TOKEN call on line 9
312TOKEN IDENTIFIER 'put' on line 9
312TOKEN ( on line 9
312BEGIN <argument list>
312TOKEN IDENTIFIER 'text' on line 9
312END <argument list>
312TOKEN ) on line 9
312END <procedure statement>
312END <statement>
312TOKEN ; on line 9
312BEGIN <statement list>
312BEGIN <statement>
312BEGIN <procedure statement>
312TOKEN call on line 10
312TOKEN IDENTIFIER 'put' on line 10
312TOKEN ( on line 10
312BEGIN <argument list>
312TOKEN IDENTIFIER 'x1' on line 10
312END <argument list>
312TOKEN ) on line 10
312END <procedure statement>
312END <statement>
312END <statement list>
312END <statement list>
312END <statement list>
312END <statement list>
312END <statement list>
312END <statement list>
312TOKEN end on line 11
312END <statement part>
312TOKEN EOF on line 12
312SUCCESS

312FILE Programs Folder/program2
312BEGIN <statement part>
312END <statement part>

312FILE Programs Folder/program3
312BEGIN <statement part>
312TOKEN begin on line 1
312BEGIN <statement list>
312BEGIN <statement>
312BEGIN <procedure statement>
312TOKEN call on line 2
312TOKEN IDENTIFIER 'get' on line 2
312TOKEN ( on line 2
312BEGIN <argument list>
312TOKEN IDENTIFIER 'x1' on line 2
312END <argument list>
312TOKEN ) on line 2
312END <procedure statement>
312END <statement>
312TOKEN ; on line 2
312BEGIN <statement list>
312BEGIN <statement>
312BEGIN <assignment statement>
312TOKEN IDENTIFIER 'x2' on line 3
312TOKEN := on line 3
312BEGIN expression
312BEGIN <term>
312BEGIN <factor>
312TOKEN NUMBER '1' on line 3
312END <factor>
312END <term>
312END expression
312END <assignment statement>
312END <statement>
312TOKEN ; on line 3
312BEGIN <statement list>
312BEGIN <statement>
312BEGIN <if statement>
312TOKEN if on line 4
312BEGIN <condition>
312TOKEN IDENTIFIER 'x1' on line 4
312BEGIN <conditional operator>
312TOKEN /= on line 4
312END <conditional operator>
312TOKEN NUMBER '0' on line 4
312END <condition>
312TOKEN then on line 4
312BEGIN <statement list>
312BEGIN <statement>
312BEGIN <assignment statement>
312TOKEN IDENTIFIER 'x2' on line 5
312TOKEN := on line 5
312BEGIN expression
312BEGIN <term>
312BEGIN <factor>
312TOKEN IDENTIFIER 'x2' on line 5
312END <factor>
312TOKEN * on line 5
312BEGIN <term>
312BEGIN <factor>
312TOKEN IDENTIFIER 'x1' on line 5
312END <factor>
312END <term>
312END <term>
312END expression
312END <assignment statement>
312END <statement>
312TOKEN ; on line 5
312BEGIN <statement list>
312BEGIN <statement>
312BEGIN <assignment statement>
312TOKEN IDENTIFIER 'text' on line 6
312TOKEN := on line 6
312TOKEN STRING 'the result is ' on line 6
312END <assignment statement>
312END <statement>
312TOKEN ; on line 6
312BEGIN <statement list>
312BEGIN <statement>
312BEGIN <procedure statement>
312TOKEN call on line 7
312TOKEN IDENTIFIER 'put' on line 7
312TOKEN ( on line 7
312BEGIN <argument list>
312TOKEN IDENTIFIER 'text' on line 7
312END <argument list>
312TOKEN ) on line 7
312END <procedure statement>
312END <statement>
312TOKEN ; on line 7
312BEGIN <statement list>
312BEGIN <statement>
312BEGIN <procedure statement>
312TOKEN call on line 8
312TOKEN IDENTIFIER 'put' on line 8
312TOKEN ( on line 8
312BEGIN <argument list>
312TOKEN IDENTIFIER 'x1' on line 8
312END <argument list>
312TOKEN ) on line 8
312END <procedure statement>
312END <statement>
312END <statement list>
312END <statement list>
312END <statement list>
312END <statement list>
312TOKEN end on line 9
312END <statement>
312END <statement list>
312END <statement list>
312END <statement list>
312END <statement part>

312FILE Programs Folder/program4
312BEGIN <statement part>
312TOKEN begin on line 1
312BEGIN <statement list>
312BEGIN <statement>
312BEGIN <procedure statement>
312TOKEN call on line 2
312TOKEN IDENTIFIER 'get' on line 2
312TOKEN ( on line 2
312BEGIN <argument list>
312TOKEN IDENTIFIER 'x1' on line 2
312END <argument list>
312TOKEN ) on line 2
312END <procedure statement>
312END <statement>
312TOKEN ; on line 2
312BEGIN <statement list>
312BEGIN <statement>
312BEGIN <assignment statement>
312TOKEN IDENTIFIER 'x2' on line 3
312TOKEN := on line 3
312BEGIN expression
312BEGIN <term>
312BEGIN <factor>
312TOKEN NUMBER '1' on line 3
312END <factor>
312END <term>
312END expression
312END <assignment statement>
312END <statement>
312TOKEN ; on line 3
312BEGIN <statement list>
312BEGIN <statement>
312BEGIN <while statement>
312TOKEN while on line 4
312BEGIN <condition>
312TOKEN IDENTIFIER 'x1' on line 4
312BEGIN <conditional operator>
312TOKEN /= on line 4
312END <conditional operator>
312TOKEN NUMBER '0' on line 4
312END <condition>
312TOKEN loop on line 4
312BEGIN <statement list>
312BEGIN <statement>
312BEGIN <assignment statement>
312TOKEN IDENTIFIER 'x2' on line 5
312TOKEN := on line 5
312BEGIN expression
312BEGIN <term>
312BEGIN <factor>
312TOKEN IDENTIFIER 'x2' on line 5
312END <factor>
312TOKEN * on line 5
312BEGIN <term>
312BEGIN <factor>
312TOKEN IDENTIFIER 'x1' on line 5
312END <factor>
312END <term>
312END <term>
312END expression
312END <assignment statement>
312END <statement>
312TOKEN ; on line 5
312BEGIN <statement list>
312BEGIN <statement>
312BEGIN <assignment statement>
312TOKEN IDENTIFIER 'x1' on line 6
312TOKEN := on line 6
312BEGIN expression
312BEGIN <term>
312BEGIN <factor>
312TOKEN IDENTIFIER 'x1' on line 6
312END <factor>
312END <term>
312TOKEN - on line 6
312BEGIN <term>
312BEGIN <factor>
312TOKEN NUMBER '1' on line 6
312END <factor>
312END <term>
312END expression
312END <assignment statement>
312END <statement>
312TOKEN ; on line 6
312BEGIN <statement list>
312BEGIN <statement>
312END <statement>
312END <statement list>
312END <statement list>
312END <statement list>
312TOKEN end on line 7
312TOKEN loop on line 7
312END <while statement>
312END <statement>
312TOKEN ; on line 7
312BEGIN <statement list>
312BEGIN <statement>
312BEGIN <assignment statement>
312TOKEN IDENTIFIER 'text' on line 8
312TOKEN := on line 8
312TOKEN STRING 'the result is ' on line 8
312END <assignment statement>
312END <statement>
312TOKEN ; on line 8
312BEGIN <statement list>
312BEGIN <statement>
312BEGIN <procedure statement>
312TOKEN call on line 9
312TOKEN IDENTIFIER 'put' on line 9
312TOKEN ( on line 9
312BEGIN <argument list>
312TOKEN IDENTIFIER 'text' on line 9
312END <argument list>
312TOKEN ) on line 9
312END <procedure statement>
312END <statement>
312TOKEN ; on line 9
312BEGIN <statement list>
312BEGIN <statement>
312BEGIN <procedure statement>
312TOKEN call on line 10
312TOKEN IDENTIFIER 'put' on line 10
312TOKEN ( on line 10
312BEGIN <argument list>
312TOKEN IDENTIFIER 'x1' on line 10
312END <argument list>
312TOKEN ) on line 10
312END <procedure statement>
312END <statement>
312END <statement list>
312END <statement list>
312END <statement list>
312END <statement list>
312END <statement list>
312END <statement list>
312TOKEN end on line 11
312END <statement part>
312TOKEN EOF on line 13
312SUCCESS

312FILE Programs Folder/program5
312BEGIN <statement part>
312TOKEN begin on line 1
312BEGIN <statement list>
312BEGIN <statement>
312BEGIN <procedure statement>
312TOKEN call on line 2
312TOKEN IDENTIFIER 'get' on line 2
312TOKEN ( on line 2
312BEGIN <argument list>
312TOKEN IDENTIFIER 'x1' on line 2
312END <argument list>
312TOKEN ) on line 2
312END <procedure statement>
312END <statement>
312TOKEN ; on line 2
312BEGIN <statement list>
312BEGIN <statement>
312BEGIN <assignment statement>
312TOKEN IDENTIFIER 'x2' on line 3
312TOKEN := on line 3
312BEGIN expression
312BEGIN <term>
312BEGIN <factor>
312TOKEN NUMBER '1' on line 3
312END <factor>
312END <term>
312END expression
312END <assignment statement>
312END <statement>
312TOKEN ; on line 3
312BEGIN <statement list>
312BEGIN <statement>
312BEGIN <while statement>
312TOKEN while on line 4
312BEGIN <condition>
312TOKEN IDENTIFIER 'x1' on line 4
312BEGIN <conditional operator>
312TOKEN /= on line 4
312END <conditional operator>
312TOKEN NUMBER '0' on line 4
312END <condition>
312TOKEN loop on line 4
312BEGIN <statement list>
312BEGIN <statement>
312BEGIN <assignment statement>
312TOKEN IDENTIFIER 'x2' on line 5
312TOKEN := on line 5
312BEGIN expression
312BEGIN <term>
312BEGIN <factor>
312TOKEN IDENTIFIER 'x2' on line 5
312END <factor>
312TOKEN * on line 5
312BEGIN <term>
312BEGIN <factor>
312TOKEN IDENTIFIER 'x1' on line 5
312END <factor>
312END <term>
312END <term>
312END expression
312END <assignment statement>
312END <statement>
312TOKEN ; on line 5
312BEGIN <statement list>
312BEGIN <statement>
312BEGIN <assignment statement>
312TOKEN IDENTIFIER 'x1' on line 6
312TOKEN := on line 6
312BEGIN expression
312BEGIN <term>
312BEGIN <factor>
312TOKEN IDENTIFIER 'x1' on line 6
312END <factor>
312END <term>
312TOKEN - on line 6
312BEGIN <term>
312BEGIN <factor>
312TOKEN NUMBER '1' on line 6
312END <factor>
312END <term>
312END expression
312END <assignment statement>
312END <statement>
312END <statement list>
312END <statement list>
312TOKEN end on line 7
312END <statement>
312END <statement list>
312END <statement list>
312END <statement list>
312END <statement part>

312FILE Programs Folder/program6
312BEGIN <statement part>
312TOKEN begin on line 1
312BEGIN <statement list>
312BEGIN <statement>
312BEGIN <procedure statement>
312TOKEN call on line 2
312TOKEN IDENTIFIER 'get' on line 2
312TOKEN ( on line 2
312BEGIN <argument list>
312TOKEN IDENTIFIER 'x1' on line 2
312END <argument list>
312TOKEN ) on line 2
312END <procedure statement>
312END <statement>
312TOKEN ; on line 2
312BEGIN <statement list>
312BEGIN <statement>
312BEGIN <assignment statement>
312TOKEN IDENTIFIER 'x2' on line 3
312TOKEN := on line 3
312BEGIN expression
312BEGIN <term>
312BEGIN <factor>
312TOKEN NUMBER '1' on line 3
312END <factor>
312END <term>
312END expression
312END <assignment statement>
312END <statement>
312TOKEN ; on line 3
312BEGIN <statement list>
312BEGIN <statement>
312BEGIN <while statement>
312TOKEN while on line 4
312BEGIN <condition>
312TOKEN IDENTIFIER 'x1' on line 4
312BEGIN <conditional operator>
312TOKEN /= on line 4
312END <conditional operator>
312TOKEN NUMBER '0' on line 4
312END <condition>
312TOKEN loop on line 4
312BEGIN <statement list>
312BEGIN <statement>
312BEGIN <assignment statement>
312TOKEN IDENTIFIER 'x2' on line 5
312TOKEN := on line 5
312BEGIN expression
312BEGIN <term>
312BEGIN <factor>
312TOKEN IDENTIFIER 'a' on line 5
312END <factor>
312END <term>
312TOKEN - on line 5
312BEGIN <term>
312BEGIN <factor>
312TOKEN IDENTIFIER 'b' on line 5
312END <factor>
312END <term>
312TOKEN + on line 5
312BEGIN <term>
312BEGIN <factor>
312TOKEN IDENTIFIER 'c' on line 5
312END <factor>
312END <term>
312TOKEN - on line 5
312BEGIN <term>
312BEGIN <factor>
312TOKEN IDENTIFIER 'd' on line 5
312END <factor>
312END <term>
312TOKEN + on line 5
312BEGIN <term>
312BEGIN <factor>
312TOKEN IDENTIFIER 'e' on line 5
312END <factor>
312END <term>
312END expression
312END <assignment statement>
312END <statement>
312TOKEN ; on line 5
312BEGIN <statement list>
312BEGIN <statement>
312BEGIN <assignment statement>
312TOKEN IDENTIFIER 'x1' on line 6
312TOKEN := on line 6
312BEGIN expression
312BEGIN <term>
312BEGIN <factor>
312TOKEN IDENTIFIER 'a' on line 6
312END <factor>
312TOKEN * on line 6
312BEGIN <term>
312BEGIN <factor>
312TOKEN IDENTIFIER 'b' on line 6
312END <factor>
312END <term>
312END <term>
312TOKEN - on line 6
312BEGIN <term>
312BEGIN <factor>
312TOKEN IDENTIFIER 'c' on line 6
312END <factor>
312TOKEN / on line 6
312BEGIN <term>
312BEGIN <factor>
312TOKEN IDENTIFIER 'd' on line 6
312END <factor>
312END <term>
312END <term>
312TOKEN + on line 6
312BEGIN <term>
312BEGIN <factor>
312TOKEN IDENTIFIER 'e' on line 6
312END <factor>
312END <term>
312END expression
312END <assignment statement>
312END <statement>
312END <statement list>
312END <statement list>
312TOKEN end on line 7
312TOKEN loop on line 7
312END <while statement>
312END <statement>
312TOKEN ; on line 7
312BEGIN <statement list>
312BEGIN <statement>
312BEGIN <assignment statement>
312TOKEN IDENTIFIER 'text' on line 8
312TOKEN := on line 8
312TOKEN STRING 'the result is ' on line 8
312END <assignment statement>
312END <statement>
312TOKEN ; on line 8
312BEGIN <statement list>
312BEGIN <statement>
312BEGIN <procedure statement>
312TOKEN call on line 9
312TOKEN IDENTIFIER 'put' on line 9
312TOKEN ( on line 9
312BEGIN <argument list>
312TOKEN IDENTIFIER 'text' on line 9
312END <argument list>
312TOKEN ) on line 9
312END <procedure statement>
312END <statement>
312TOKEN ; on line 9
312BEGIN <statement list>
312BEGIN <statement>
312BEGIN <procedure statement>
312TOKEN call on line 10
312TOKEN IDENTIFIER 'put' on line 10
312TOKEN ( on line 10
312BEGIN <argument list>
312TOKEN IDENTIFIER 'x1' on line 10
312END <argument list>
312TOKEN ) on line 10
312END <procedure statement>
312END <statement>
312END <statement list>
312END <statement list>
312END <statement list>
312END <statement list>
312END <statement list>
312END <statement list>
312TOKEN end on line 11
312END <statement part>
312TOKEN EOF on line 13
312SUCCESS

312FILE Programs Folder/program7
312BEGIN <statement part>
312TOKEN begin on line 1
312BEGIN <statement list>
312BEGIN <statement>
312BEGIN <procedure statement>
312TOKEN call on line 2
312TOKEN IDENTIFIER 'get' on line 2
312TOKEN ( on line 2
312BEGIN <argument list>
312TOKEN IDENTIFIER 'x1' on line 2
312END <argument list>
312TOKEN ) on line 2
312END <procedure statement>
312END <statement>
312TOKEN ; on line 2
312BEGIN <statement list>
312BEGIN <statement>
312BEGIN <assignment statement>
312TOKEN IDENTIFIER 'x2' on line 3
312TOKEN := on line 3
312BEGIN expression
312BEGIN <term>
312BEGIN <factor>
312TOKEN NUMBER '1' on line 3
312END <factor>
312END <term>
312END expression
312END <assignment statement>
312END <statement>
312TOKEN ; on line 3
312BEGIN <statement list>
312BEGIN <statement>
312END <statement>
312END <statement list>
312END <statement list>
312END <statement list>
312END <statement part>

312FILE Programs Folder/program8
312BEGIN <statement part>
312TOKEN begin on line 1
312BEGIN <statement list>
312BEGIN <statement>
312BEGIN <procedure statement>
312TOKEN call on line 2
312TOKEN IDENTIFIER 'get' on line 2
312TOKEN ( on line 2
312BEGIN <argument list>
312TOKEN IDENTIFIER 'x1' on line 2
312END <argument list>
312TOKEN ) on line 2
312END <procedure statement>
312END <statement>
312TOKEN ; on line 2
312BEGIN <statement list>
312BEGIN <statement>
312BEGIN <assignment statement>
312TOKEN IDENTIFIER 'x2' on line 3
312TOKEN := on line 3
312BEGIN expression
312BEGIN <term>
312BEGIN <factor>
312TOKEN NUMBER '1' on line 3
312END <factor>
312END <term>
312END expression
312END <assignment statement>
312END <statement>
312TOKEN ; on line 3
312BEGIN <statement list>
312BEGIN <statement>
312BEGIN <while statement>
312TOKEN while on line 4
312BEGIN <condition>
312TOKEN IDENTIFIER 'x1' on line 4
312BEGIN <conditional operator>
312TOKEN /= on line 4
312END <conditional operator>
312TOKEN NUMBER '0' on line 4
312END <condition>
312TOKEN loop on line 4
312BEGIN <statement list>
312BEGIN <statement>
312BEGIN <assignment statement>
312TOKEN IDENTIFIER 'x2' on line 5
312TOKEN := on line 5
312BEGIN expression
312BEGIN <term>
312BEGIN <factor>
312TOKEN IDENTIFIER 'x2' on line 5
312END <factor>
312TOKEN * on line 5
312BEGIN <term>
312BEGIN <factor>
312TOKEN IDENTIFIER 'x1' on line 5
312END <factor>
312END <term>
312END <term>
312END expression
312END <assignment statement>
312END <statement>
312TOKEN ; on line 5
312BEGIN <statement list>
312BEGIN <statement>
312BEGIN <assignment statement>
312TOKEN IDENTIFIER 'x1' on line 6
312TOKEN := on line 6
312BEGIN expression
312BEGIN <term>
312BEGIN <factor>
312TOKEN IDENTIFIER 'x1' on line 6
312END <factor>
312END <term>
312TOKEN - on line 6
312BEGIN <term>
312BEGIN <factor>
312TOKEN NUMBER '1' on line 6
312END <factor>
312END <term>
312END expression
312END <assignment statement>
312END <statement>
312END <statement list>
312END <statement list>
312TOKEN end on line 7
312TOKEN loop on line 7
312END <while statement>
312END <statement>
312TOKEN ; on line 7
312BEGIN <statement list>
312BEGIN <statement>
312BEGIN <assignment statement>
312TOKEN IDENTIFIER 'text' on line 8
312TOKEN := on line 8
312TOKEN STRING 'the result is ' on line 8
312END <assignment statement>
312END <statement>
312TOKEN ; on line 8
312BEGIN <statement list>
312BEGIN <statement>
312BEGIN <procedure statement>
312TOKEN call on line 9
312TOKEN IDENTIFIER 'put' on line 9
312TOKEN ( on line 9
312BEGIN <argument list>
312TOKEN IDENTIFIER 'text' on line 9
312END <argument list>
312TOKEN ) on line 9
312END <procedure statement>
312END <statement>
312TOKEN ; on line 9
312BEGIN <statement list>
312BEGIN <statement>
312BEGIN <procedure statement>
312TOKEN call on line 10
312TOKEN IDENTIFIER 'put' on line 10
312TOKEN ( on line 10
312BEGIN <argument list>
312TOKEN IDENTIFIER 'x1' on line 10
312END <argument list>
312TOKEN ) on line 10
312END <procedure statement>
312END <statement>
312END <statement list>
312END <statement list>
312END <statement list>
312END <statement list>
312END <statement list>
312END <statement list>
312TOKEN end on line 11
312END <statement part>

312FILE Programs Folder/program9
312BEGIN <statement part>
312TOKEN begin on line 0
312BEGIN <statement list>
312BEGIN <statement>
312BEGIN <procedure statement>
312TOKEN call on line 1
312TOKEN IDENTIFIER 'get' on line 1
312TOKEN ( on line 1
312BEGIN <argument list>
312TOKEN IDENTIFIER 'x1' on line 1
312END <argument list>
312TOKEN ) on line 1
312END <procedure statement>
312END <statement>
312TOKEN ; on line 1
312BEGIN <statement list>
312BEGIN <statement>
312BEGIN <assignment statement>
312TOKEN IDENTIFIER 'x3' on line 2
312TOKEN := on line 2
312BEGIN expression
312BEGIN <term>
312BEGIN <factor>
312TOKEN NUMBER '0' on line 2
312END <factor>
312END <term>
312END expression
312END <assignment statement>
312END <statement>
312TOKEN ; on line 2
312BEGIN <statement list>
312BEGIN <statement>
312BEGIN <for statement>
312TOKEN for on line 3
312TOKEN ( on line 3
312BEGIN <assignment statement>
312TOKEN IDENTIFIER 'x2' on line 3
312TOKEN := on line 3
312BEGIN expression
312BEGIN <term>
312BEGIN <factor>
312TOKEN NUMBER '1' on line 3
312END <factor>
312END <term>
312END expression
312END <assignment statement>
312TOKEN ; on line 3
312BEGIN <condition>
312TOKEN IDENTIFIER 'x2' on line 3
312BEGIN <conditional operator>
312TOKEN < on line 3
312END <conditional operator>
312TOKEN IDENTIFIER 'x1' on line 3
312END <condition>
312TOKEN ; on line 3
312BEGIN <assignment statement>
312TOKEN IDENTIFIER 'x2' on line 3
312TOKEN := on line 3
312BEGIN expression
312BEGIN <term>
312BEGIN <factor>
312TOKEN IDENTIFIER 'x2' on line 3
312END <factor>
312END <term>
312TOKEN + on line 3
312BEGIN <term>
312BEGIN <factor>
312TOKEN NUMBER '1' on line 3
312END <factor>
312END <term>
312END expression
312END <assignment statement>
312TOKEN ) on line 3
312TOKEN do on line 3
312BEGIN <statement list>
312BEGIN <statement>
312BEGIN <procedure statement>
312TOKEN call on line 4
312TOKEN IDENTIFIER 'put' on line 4
312TOKEN ( on line 4
312BEGIN <argument list>
312TOKEN IDENTIFIER 'x1' on line 4
312TOKEN , on line 4
312BEGIN <argument list>
312TOKEN IDENTIFIER 'x2' on line 4
312TOKEN , on line 4
312BEGIN <argument list>
312TOKEN IDENTIFIER 'x3' on line 4
312END <argument list>
312END <argument list>
312END <argument list>
312TOKEN ) on line 4
312END <procedure statement>
312END <statement>
312TOKEN ; on line 4
312BEGIN <statement list>
312BEGIN <statement>
312BEGIN <assignment statement>
312TOKEN IDENTIFIER 'x3' on line 5
312TOKEN := on line 5
312BEGIN expression
312BEGIN <term>
312BEGIN <factor>
312TOKEN IDENTIFIER 'x3' on line 5
312END <factor>
312END <term>
312TOKEN + on line 5
312BEGIN <term>
312BEGIN <factor>
312TOKEN IDENTIFIER 'x2' on line 5
312END <factor>
312END <term>
312END expression
312END <assignment statement>
312END <statement>
312END <statement list>
312END <statement list>
312TOKEN end on line 6
312TOKEN loop on line 6
312END <for statement>
312END <statement>
312TOKEN ; on line 6
312BEGIN <statement list>
312BEGIN <statement>
312BEGIN <procedure statement>
312TOKEN call on line 7
312TOKEN IDENTIFIER 'put' on line 7
312TOKEN ( on line 7
312BEGIN <argument list>
312TOKEN IDENTIFIER 'x3' on line 7
312END <argument list>
312TOKEN ) on line 7
312END <procedure statement>
312END <statement>
312END <statement list>
312END <statement list>
312END <statement list>
312END <statement list>
312TOKEN end on line 8
312END <statement part>
312TOKEN EOF on line 9
312SUCCESS

312FILE Programs Folder/program10
312BEGIN <statement part>
312TOKEN begin on line 0
312BEGIN <statement list>
312BEGIN <statement>
312BEGIN <procedure statement>
312TOKEN call on line 0
312TOKEN IDENTIFIER 'get' on line 0
312TOKEN ( on line 0
312BEGIN <argument list>
312TOKEN IDENTIFIER 'x1' on line 0
312END <argument list>
312TOKEN ) on line 0
312END <procedure statement>
312END <statement>
312TOKEN ; on line 0
312BEGIN <statement list>
312BEGIN <statement>
312BEGIN <assignment statement>
312TOKEN IDENTIFIER 'x3' on line 0
312TOKEN := on line 0
312BEGIN expression
312BEGIN <term>
312BEGIN <factor>
312TOKEN NUMBER '0' on line 0
312END <factor>
312END <term>
312END expression
312END <assignment statement>
312END <statement>
312TOKEN ; on line 0
312BEGIN <statement list>
312BEGIN <statement>
312BEGIN <for statement>
312TOKEN for on line 0
312TOKEN ( on line 0
312BEGIN <assignment statement>
312TOKEN IDENTIFIER 'x2' on line 0
312TOKEN := on line 0
312BEGIN expression
312BEGIN <term>
312BEGIN <factor>
312TOKEN NUMBER '1' on line 0
312END <factor>
312END <term>
312END expression
312END <assignment statement>
312TOKEN ; on line 0
312BEGIN <condition>
312TOKEN IDENTIFIER 'x2' on line 0
312BEGIN <conditional operator>
312TOKEN < on line 0
312END <conditional operator>
312TOKEN IDENTIFIER 'x1' on line 0
312END <condition>
312TOKEN ; on line 0
312BEGIN <assignment statement>
312TOKEN IDENTIFIER 'x2' on line 0
312TOKEN := on line 0
312BEGIN expression
312BEGIN <term>
312BEGIN <factor>
312TOKEN IDENTIFIER 'x2' on line 0
312END <factor>
312END <term>
312TOKEN + on line 0
312BEGIN <term>
312BEGIN <factor>
312TOKEN NUMBER '1' on line 0
312END <factor>
312END <term>
312END expression
312END <assignment statement>
312TOKEN ) on line 0
312TOKEN do on line 0
312BEGIN <statement list>
312BEGIN <statement>
312BEGIN <procedure statement>
312TOKEN call on line 0
312TOKEN IDENTIFIER 'put' on line 0
312TOKEN ( on line 0
312BEGIN <argument list>
312TOKEN IDENTIFIER 'x1' on line 0
312TOKEN , on line 0
312BEGIN <argument list>
312TOKEN IDENTIFIER 'x2' on line 0
312TOKEN , on line 0
312BEGIN <argument list>
312TOKEN IDENTIFIER 'x3' on line 0
312END <argument list>
312END <argument list>
312END <argument list>
312TOKEN ) on line 0
312END <procedure statement>
312END <statement>
312TOKEN ; on line 0
312BEGIN <statement list>
312BEGIN <statement>
312BEGIN <assignment statement>
312TOKEN IDENTIFIER 'x3' on line 0
312TOKEN := on line 0
312BEGIN expression
312BEGIN <term>
312BEGIN <factor>
312TOKEN IDENTIFIER 'x3' on line 0
312END <factor>
312END <term>
312TOKEN + on line 0
312BEGIN <term>
312BEGIN <factor>
312TOKEN IDENTIFIER 'x2' on line 0
312END <factor>
312END <term>
312END expression
312END <assignment statement>
312END <statement>
312END <statement list>
312END <statement list>
312TOKEN end on line 0
312TOKEN loop on line 0
312END <for statement>
312END <statement>
312TOKEN ; on line 0
312BEGIN <statement list>
312BEGIN <statement>
312BEGIN <procedure statement>
312TOKEN call on line 0
312TOKEN IDENTIFIER 'put' on line 0
312TOKEN ( on line 0
312BEGIN <argument list>
312TOKEN IDENTIFIER 'x3' on line 0
312END <argument list>
312TOKEN ) on line 0
312END <procedure statement>
312END <statement>
312END <statement list>
312END <statement list>
312END <statement list>
312END <statement list>
312TOKEN end on line 0
312END <statement part>
312TOKEN EOF on line 1
312SUCCESS
Programs Folder/program11 does not exist

312FINISH
